-- USERS
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  fullName VARCHAR(255) NOT NULL,
  phone VARCHAR(11) UNIQUE NOT NULL,
  email VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  tokenUser VARCHAR(255) UNIQUE NOT NULL,
  role VARCHAR(25) CHECK (role IN ('student', 'parent')) NOT NULL,
  status VARCHAR(20) DEFAULT "INACTIVE" CHECK (status IN ('ACTIVE', 'INACTIVE')),
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- ACCOUTNS
CREATE TABLE accounts (
  id SERIAL PRIMARY KEY,
  fullName VARCHAR(255) NOT NULL,
  phone VARCHAR(11) UNIQUE NOT NULL,
  email VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  tokenAccount VARCHAR(255) UNIQUE NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- PARENT_STUDENT
CREATE TABLE parent_student (
  parent_id INTEGER REFERENCES users(id),
  student_id INTEGER REFERENCES users(id),
  PRIMARY KEY (parent_id, student_id),
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- wallets
CREATE TABLE wallets (
  id SERIAL PRIMARY KEY,
  studentId INTEGER UNIQUE REFERENCES users(id),
  balance INTEGER DEFAULT 0,
  status VARCHAR(20) DEFAULT "INACTIVE" CHECK (status IN ('ACTIVE', 'INACTIVE')),
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- lessons
CREATE TABLE lessons (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  rewardToken INTEGER DEFAULT 10,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- lesson results
CREATE TABLE progress  (
  id SERIAL PRIMARY KEY,
  studentId INTEGER REFERENCES users(id),
  lessonId INTEGER REFERENCES lessons(id),
  score INTEGER,
  completed BOOLEAN DEFAULT FALSE,
  completedAt TIMESTAMP,
  UNIQUE(studentId, lessonId)
);